"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.lingui = void 0;
const conf_1 = require("@lingui/conf");
const api_1 = require("@lingui/cli/api");
const path_1 = __importDefault(require("path"));
const fileRegex = /\.(po)$/;
function lingui(linguiConfig = {}) {
    const config = (0, conf_1.getConfig)(linguiConfig);
    return {
        name: "vite-plugin-lingui",
        config: (config) => {
            // https://github.com/lingui/js-lingui/issues/1464
            config.optimizeDeps.exclude = config.optimizeDeps.exclude || [];
            config.optimizeDeps.exclude.push("@lingui/macro");
        },
        transform(src, id) {
            if (fileRegex.test(id)) {
                const catalogRelativePath = path_1.default.relative(config.rootDir, id);
                const fileCatalog = (0, api_1.getCatalogForFile)(catalogRelativePath, (0, api_1.getCatalogs)(config));
                const { locale, catalog } = fileCatalog;
                const catalogs = catalog.readAll();
                const messages = Object.keys(catalogs[locale]).reduce((acc, key) => {
                    acc[key] = catalog.getTranslation(catalogs, locale, key, {
                        fallbackLocales: config.fallbackLocales,
                        sourceLocale: config.sourceLocale,
                    });
                    return acc;
                }, {});
                const compiled = (0, api_1.createCompiledCatalog)(locale, messages, {
                    strict: false,
                    namespace: "es",
                    pseudoLocale: config.pseudoLocale,
                });
                return {
                    code: compiled,
                    map: null, // provide source map if available
                };
            }
        },
    };
}
exports.lingui = lingui;
exports.default = lingui;
//# sourceMappingURL=index.js.map